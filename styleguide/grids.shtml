<!DOCTYPE html>
<html lang="en" id="top">
    <head>
        <!-- Page SEO metadata -->
        <title>Flexbox Grids - The SFUMATO Layout Framework</title>
        <script type="text/javascript">
            var category = "#category-grids";
        </script>

<!--#include virtual="/_head.shtml"-->
    </head>
    <body>
<!--#include virtual="/_logo-bar.shtml"-->
        <main>
            <section sf-unit>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-gutters="5%" sf-tabp-row-gutters="2.25rem">
                    <div role="gridcell" sf-tabp-col-8 id="toc-cell">
<!--#include virtual="/_toc.shtml"-->
                    </div>
                    <span id="toc-grids" title="Overview"></span>
                    <div role="gridcell" sf-tabp-col-16>
                        <div sf-subunit>
                            <h1>
                                <span class="fa-stack fa-2x">
                                    <i class="fa fa-circle fa-stack-2x"></i>
                                    <i class="fa fa-th fa-stack-1x fa-inverse"></i>
                                </span>Flexbox grids
                            </h1>
                            <p>
                                SFUMATO offers a simple, convenient, flexbox-based, <strong>24-column grid system</strong>. 
                                If you've created a traditional 12-column responsive grid layout before, you'll find that it mostly follows the pattern you already know. 
                                That said, there are two primary reasons we created this grid system:
                            </p>
                            <ol>
                                <li>to ensure reliable grid behavior within a scalable framework, and...</li>
                                <li>to help make creating grid-based layouts easy.</li>
                            </ol>
                            <h3>
                                Oh, snap! Here's one...
                            </h3>
                            <section id="overview-sample-grid" role="grid" sf-cols="2" sf-gutters="2%" sf-row-gutters="0.5rem" sf-tabp-cols="4" sf-tabp-gutters="3%" sf-tabp-row-gutters="1.5rem">
                                <div role="gridcell"><section><div></div></section></div>
                                <div role="gridcell"><section><div></div></section></div>
                                <div role="gridcell"><section><div></div></section></div>
                                <div role="gridcell"><section><div></div></section></div>
                                <div role="gridcell"><section><div></div></section></div>
                                <div role="gridcell"><section><div></div></section></div>
                                <div role="gridcell"><section><div></div></section></div>
                                <div role="gridcell"><section><div></div></section></div>
                            </section>
                        </div>
                        <hr />
                        <div sf-subunit>
                            <p>
                                Below you'll find information that describes the grid system and how to use it in various scenarios. 
                                You'll also find examples of implementing scalable, responsive, flexbox grids. 
                            </p>
                            <p>
                                There are two primary ways to use the grid system: <strong>automatic</strong> and <strong>manual</strong>.
                                Automatic mode only requires HTML markup. Manual mode requires some SCSS code but is more flexible. 
                                And you can use an automatic grid with some extra manual overrides. 
                                Read on to find out more.
                            </p>
                            <blockquote>
                                <strong>NERD FACT:</strong>
                                SFUMATO grid cell left/right (horizontal) gutters can be rems or percentages that are used for grid cell padding (1/2 the gutter value on each side). 
                                Grid cell top/bottom (row) gutters are padding values in rems (1/2 the gutter value on each side). 
                                This gives you the ability to do things like easily add borders between grid cells. 
                                The grid's left/right and top/bottom edges use negative margin to negate the extra space after the last grid cell or row.
                            </blockquote>                            
                        </div>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
            </section>

            <section id="toc-markup-grids" title="Automatic grids" sf-unit>
                <div sf-subunit>
                    <h1>
                        <span class="fa-stack fa-2x">
                            <i class="fa fa-circle fa-stack-2x"></i>
                            <i class="fas fa-magic fa-stack-1x fa-inverse"></i>
                        </span>Automatic grids
                    </h1>
                    <p>
                        Automatic grids allow you to simply create HTML markup with some specific attributes to get a scalable, responsive grid working quickly. 
                        These are useful for grids of equal-sized columns, grids with gutters, or a quick start to a more complex grid.
                    </p>
                    <p>
                        Here is an example of a simple automatic grid with three columns of equal widths and a gutter:
                    </p>
                </div>

                <div sf-subunit>
                    <pre>
                        <code class="language-html">
                            &lt;div role="grid" sf-cols="3" sf-gutters="2%" sf-row-gutters="0.5rem"&gt;
                                &lt;div role="gridcell"&gt;&lt;/div&gt;
                                &lt;div role="gridcell"&gt;&lt;/div&gt;
                                &lt;div role="gridcell"&gt;&lt;/div&gt;
                            &lt;/div&gt;
                        </code>
                    </pre>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                    <div id="toc-breakpoints" title="Media breakpoints"></div>
                </div>

                <div sf-subunit>
                    <h2>Media breakpoints</h2>
                    <p>
                        You can specify media breakpoints along with your grid attributes to finely control when the grid changes appearance. 
                        Below are the breakpoints (and their selector prefixes) that ship with SFUMATO:
                    </p>
                    <ul>
                        <li><strong>zero</strong> <code>sf-*</code> &mdash; mobile first</li>
                        <li><strong>phablet</strong> <code>sf-phab-*</code> &mdash; large handheld</li>
                        <li><strong>tablet-portrait</strong> <code>sf-tabp-*</code> &mdash; tablet held in portrait orientation</li>
                        <li><strong>tablet-landscape</strong> <code>sf-tabl-*</code> &mdash; tablet held in landscape orientation</li>
                        <li><strong>notebook</strong> <code>sf-note-*</code> &mdash; notebook computer</li>
                        <li><strong>desktop</strong> <code>sf-desk-*</code> &mdash; desktop computer (large screen)</li>
                        <li><strong>elastic</strong> <code>sf-elas-*</code> &mdash; the point at which scaling and resizing should stop; can also be used as a super large breakpoint for layouts that never stop scaling up</li>
                    </ul>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                    <span id="toc-grid-attributes" title="Grid attributes"></span>
                </div>

                <div sf-subunit>
                    <h2>Grid style attributes</h2>
                    <p>
                        By prefixing the following attributes for each breakpoint, you can easily control grid appearance right in the HTML markup, saving you the trouble of writing SCSS code. 
                        You can also fine-tune a grid that is established this way, since SCSS code will override these settings.
                    </p>
                </div>

                <div sf-subunit>
                    <ul sf-expanded>
                        <li>
                            <h4 sf-tight>Gutters</h4>
                            <p sf-tight>
                                <strong>{prefix}-gutters="{value}"</strong> &mdash; percentage or rem value
                            </p>
                            <p sf-tight>
                                Defines the left/right gap between grid cells. 
                                To keep the generated CSS small, you can define how high these values can go, and what increment (fractions) are supported. 
                                See the <em>_config-measurements.scss</em> file for more information.
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a tablet-portait layout that uses a gutter of 3%.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="4" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem"&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Row gutters</h4>
                            <p sf-tight>
                                <strong>{prefix}-row-gutters="{value}"</strong> &mdash; rem value
                            </p>
                            <p sf-tight>
                                Defines the top/bottom gap between rows of grid cells. 
                                To keep the generated CSS small, you can define how high these values can go, and what increment (fractions) are supported. 
                                See the <em>_config-measurements.scss</em> file for more information.
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a tablet-portait layout that uses a row gutter of 2rem.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="4" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem"&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Columns</h4>
                            <p sf-tight>
                                <strong>{prefix}-cols="#"</strong> &mdash; <em>values: 1-24</em>
                            </p>
                            <p sf-tight>
                                This tells the grid how many equal-width columns to assume as a default. 
                                You can always change the grid cell widths and other styles in your own SCSS code.
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a mobile layout with 1 column and a gutter beneath each row, and a tablet-portrait layout with 4 columns and a 3% gutter between the cells, with a 2rem gutter below each row of cells.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-row-gutters="1.25" sf-tabp-cols="4" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem"&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Direction</h4>
                            <p sf-tight>
                                <strong>{prefix}-reverse</strong> and <strong>{prefix}-not-reverse</strong>
                            </p>
                            <p sf-tight>
                                This makes the grid cells render in reverse order (per row). 
                                If you use reverse at a mobile size and want to clear that in a wider breakpoint, use the <code>{prefix}-not-reverse</code> attribute. 
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a mobile layout that reverses the column order for mobile, and clears that setting for tablet-portrait.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-reverse sf-row-gutters="1.25" sf-tabp-cols="4" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem" sf-tabp-not-reverse&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Grid cell heights</h4>
                            <p sf-tight>
                                <strong>{prefix}-equal-heights</strong>
                            </p>
                            <p sf-tight>
                                All grid cells in a row will be the height of the tallest grid cell in that row.
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a tablet-portait layout that uses equal heights.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="4" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem" sf-tabp-equal-heights&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Grid cell vertical alignment</h4>
                            <p sf-tight>
                                <strong>{prefix}-centered</strong>
                            </p>
                            <p sf-tight>
                                All grid cells in a row will vertically center their direct descendants.
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a tablet-portait layout that uses vertical centering.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="4" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem" sf-tabp-centered&gt;
                                </code>
                            </pre>
                        </li>
                    </ul>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                    <span id="toc-grid-attributes" title="Grid cell attributes"></span>
                </div>

                <div sf-subunit>
                    <div sf-subunit>
                        <h2>Grid cell attributes</h2>
                        <p>
                            By prefixing the following attributes for each breakpoint, you can easily control grid cell appearance right in the HTML markup, saving you the trouble of writing SCSS code. 
                            You can also fine-tune grid cells established this way, since SCSS code will override these settings.
                        </p>
                    </div>
                    <ul sf-expanded>
                        <li>
                            <h4 sf-tight>Widths</h4>
                            <p sf-tight>
                                <strong>{prefix}-col-{1-24}</strong> &mdash; {1-24} column width
                            </p>
                            <p sf-tight>
                                Defines the width of an individual grid cell. 
                                In a 24-column system, the value 24 would equal 100% width. 
                                Likewise, a value of 12 would equal 50% width.
                            </p>
                            <p sf-tight>
                                <strong>{prefix}-{fraction}</strong> &mdash; {fraction} fraction shortcut:
                            </p>
                            <p sf-tight>
                                Defines the width of an individual grid cell as a fraction shortcut. 
                                The following are available:
                            </p>
                            <p>
                                <div role="grid"sf-cols="2" sf-gutters="5%" sf-row-gutters="1.5rem">
                                    <div role="gridcell">
                                        <ul sf-tight>
                                            <li>one-whole</li>
                                            <li>one-half</li>
                                            <li>one-third</li>
                                            <li>two-thirds</li>
                                            <li>one-quarter</li>
                                            <li>three-quarters</li>
                                        </ul>
                                    </div>
                                    <div role="gridcell" sf-tabp-pull-8>
                                        <ul sf-tight>
                                            <li>one-sixth</li>
                                            <li>five-sixths</li>
                                            <li>one-eighth</li>
                                            <li>three-eighths</li>
                                            <li>five-eighths</li>
                                            <li>seven-eighths</li>
                                        </ul>
                                    </div>
                                </div>
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a grid with two columns and asymmetric grid cell widths.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="2"&gt;
                                        &lt;div role="gridcell" sf-tabp-col-8&gt;&lt;/div&gt;
                                        &lt;div role="gridcell" sf-tabp-two-thirds&gt;&lt;/div&gt;
                                    &lt;/div&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Push</h4>
                            <p sf-tight>
                                <strong>{prefix}-push-{1-24}</strong> &mdash; {1-24} column width
                            </p>
                            <p sf-tight>
                                Pushes a grid cell to the right by a specific amount. 
                                This eliminates the need to create empty grid cells for some layouts.
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a grid with two columns with pushed grid cells.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="2"&gt;
                                        &lt;div role="gridcell" sf-tabp-col-8 sf-tabp-push-4&gt;&lt;/div&gt;
                                        &lt;div role="gridcell" sf-tabp-col-8 sf-tabp-push-4&gt;&lt;/div&gt;
                                    &lt;/div&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Pull</h4>
                            <p sf-tight>
                                <strong>{prefix}-pull-{1-24}</strong> &mdash; {1-24} column width
                            </p>
                            <p sf-tight>
                                Pulls a grid cell to the left by a specific amount. 
                                This eliminates the need to create empty grid cells for some layouts.
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a grid with two columns with pulled grid cells.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="2"&gt;
                                        &lt;div role="gridcell" sf-tabp-col-8 sf-tabp-pull-4&gt;&lt;/div&gt;
                                        &lt;div role="gridcell" sf-tabp-col-8 sf-tabp-pull-4&gt;&lt;/div&gt;
                                    &lt;/div&gt;
                                </code>
                            </pre>
                        </li>
                        <li>
                            <h4 sf-tight>Auto-width</h4>
                            <p sf-tight>
                                <strong>sf-width-auto</strong>
                            </p>
                            <p sf-tight>
                                Forces a grid cell to fill the remaining space at all breakpoints, so long as the content doesn't extend the grid cell wider than the remaining space. 
                            </p>
                            <p sf-tight>
                                <strong>Example:</strong> a grid with two columns, the last of which fills the remaining space.
                            </p>
                            <pre>
                                <code class="language-html">
                                    &lt;div role="grid" sf-tabp-cols="2"&gt;
                                        &lt;div role="gridcell" sf-tabp-col-8&gt;&lt;/div&gt;
                                        &lt;div role="gridcell" sf-width-auto&gt;&lt;/div&gt;
                                    &lt;/div&gt;
                                </code>
                            </pre>
                        </li>
                    </ul>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                </div>
            </section>

            <section id="toc-manual-grids" title="Manual grids" sf-unit>
                <div sf-subunit>
                    <h1>
                        <span class="fa-stack fa-2x">
                            <i class="fa fa-circle fa-stack-2x"></i>
                            <i class="fas fa-pencil-alt fa-stack-1x fa-inverse"></i>
                        </span>Manual grids
                    </h1>
                    <p>
                        If you need full control of your grid layout, you'll want to use this type of implementation. 
                        Here, the basics of grid behavior are handled for you, but you control things like grid cell widths, gutters, etc. 
                    </p>
                    <p>
                        <strong>Here is an example</strong> of a simple manual grid with three columns of varied widths. 
                        It does not use gutters. 
                        This example is for the grid elements of the SFUMATO logo and version bar at the top of the page:
                    </p>
                </div>

                <div sf-subunit>
                    <h4>Example manual grid:</h4>
                    <section id="logo-sample">
                        <div role="grid">
                            <div role="gridcell">
                                <a href="/"><img src="images/SFUMATO-mark-color.svg" /></a>
                            </div>
                            <div role="gridcell" sf-width-auto>
                                <h1><a href="/">SFUMATO</a></h1>
                            </div>
                            <div role="gridcell" sf-width-auto>
                                <h3>USAGE &amp; STYLE GUIDE</h3>
                                <h4>Version <span id="sfumato-version" role="status"></span></h4>
                            </div>
                        </div>
                    </section>
                </div>

                <div sf-subunit>
                    <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                        <div role="gridcell">
                            <h4>HTML</h4>
                            <pre>
                                <code class="language-html" id="logo-bar-sample"></code>
                            </pre>
                        </div>
                        <div role="gridcell">
                            <h4>SCSS</h4>
                            <pre>
                                <code class="language-scss">
                                    [role="grid"] {

                                        > [role="gridcell"] {

                                            &:nth-child(1) {

                                                margin-right: 1%;
                                                width: 15%;

                                                @include sf-media($from: tablet-portrait) {

                                                    width: 5%;
                                                }
                                            }
                                        }
                                    }
                                </code>
                            </pre>
                        </div>
                    </div>
                    <script type="text/javascript">
                        $("#logo-bar-sample").text($("#logo").html().replace(/=""/g, ""));
                    </script>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                </div>

                <div sf-subunit>
                    <h2>
                        <i class="fas fa-birthday-cake"></i>&nbsp;
                        Manual is still cake
                    </h2>
                    <p>
                        The markup below is used for the <strong>table of contents and intro content</strong> at the top of this page. 
                        This is a fully manual grid with two columns and gutters; one column is more narrow than the other. 
                    </p>
                    <p>
                        <strong>NOTE:</strong> When manually styling grids, there are no limits on the range of values for percentages or rems. 
                        Those limits are applied only to the HTML (automatic) grids because styles have to pre-exist for them to work.
                    </p>
                </div>

                <div sf-subunit>
                    <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                        <div role="gridcell">
                            <h4>HTML</h4>
                            <pre>
                                <code class="language-html" id="logo-bar-sample">
                                    &lt;div id="toc" role="grid"&gt;
                                        &lt;div role="gridcell"&gt;
                                            &lt;h3&gt;On this page...&lt;/h3&gt;
                                            ...
                                            &lt;h3&gt;Examples&lt;/h3&gt;
                                            ...
                                        &lt;/div&gt;
                                        &lt;div role="gridcell"&gt;
                                            &lt;h1&gt;Flexbox grids&lt;/h1&gt;
                                            &lt;p&gt;
                                                SFUMATO offers a...
                                            &lt;/p&gt;
                                            ...
                                        &lt;/div&gt;
                                    &lt;/div&gt;                                        
                                </code>
                            </pre>
                        </div>
                        <div role="gridcell">
                            <h4>SCSS</h4>
                            <pre>
                                <code class="language-scss">
                                    [role="grid"] {

                                        @include sf-set-gutter (
                                            $gutter: false,
                                            $row-gutter: 2.25rem
                                        );
                        
                                        @include sf-set-gutter (
                                            $from: tablet-portrait,
                                            $gutter: 10%,
                                            $row-gutter: false
                                        );
                                                
                                        > [role="gridcell"] {

                                            &:nth-child(1) {

                                                @include sf-set-width (
                                                    $from: tablet-portrait,
                                                    $width: 30%
                                                );
                                            }

                                            &:nth-child(2) {

                                                @include sf-set-width (
                                                    $from: tablet-portrait,
                                                    $width: 70%
                                                );
                                            }
                                        }
                                    }
                                </code>
                            </pre>
                        </div>
                    </div>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                    <span id="toc-grid-overrides" title="Manual grid styles"></span>
                </div>

                <div sf-subunit>
                    <h2>Manual grid styles</h2>
                    <p>
                        You can override grid behaviors in SCSS code more easily with some helpers. 
                        These are applied to the <code class="language-css">[role="grid"]</code> selector.
                    </p>
                </div>

                <div sf-subunit>
                    <pre>
                        <code class="language-scss">
                            [role="grid"] {
                                @include sf-make-reverse();
                            }
                        </code>
                    </pre>
                </div>

                <div sf-subunit>
                    <ul>
                        <li>
                            Turn the grid into an <strong>equal height</strong> grid: 
                            <code class="language-css" feature>@include sf-make-equal-heights();</code>
                        </li>
                        <li>
                            Turn the grid into a <strong>centered</strong> grid: 
                            <code class="language-css" feature>@include sf-make-centered-grid();</code>
                        </li>
                        <li>
                            Turn the grid into a <strong>reverse</strong> grid: 
                            <code class="language-css" feature>@include sf-make-reverse();</code>
                        </li>
                    </ul>
                </div>

                <div sf-subunit>
                    <h3>Gutter</h3>
                    <p>
                        Set a grid's <strong>gutter</strong> and <strong>row gutter</strong>. 
                        Using this mixin allows for easy use of media breakpoints and adjusts the grid's margins.
                    </p>
                </div>

                <div sf-subunit>
                    <pre>
                        <code class="language-scss">
                            [role="grid"] {
                                @include sf-set-gutter (
                                    $from:tablet-portrait,
                                    $gutter:10%,
                                    $row-gutter:3rem
                                );
                            }
                        </code>
                    </pre>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                    <span id="toc-gridcell-overrides" title="Manual grid cell styles"></span>
                </div>

                <div sf-subunit>
                    <h2>Manual grid cell styles</h2>
                    <p>
                        You can also alter grid cell styles in SCSS more easily with some helpers. 
                        These are applied to the <code class="language-css">[role="gridcell"]</code> selectors.
                    </p>
                </div>

                <div sf-subunit>
                    <h3>Width</h3>
                    <p>
                        Set a grid cell's <strong>width</strong>. 
                        Using this mixin allows for easy use of media breakpoints and handles growing grid cells to fill the remaining space.
                    </p>
                </div>

                <div sf-subunit>
                    <pre>
                        <code class="language-scss">
                            [role="gridcell"] {
                                @include sf-set-width(
                                    $from: tablet-portrait,
                                    $width: 30%
                                );
                            }
                        </code>
                    </pre>
                </div>

                <div sf-subunit>
                    <ul>
                        <li><strong>$from</strong>; media query breakpoint (e.g. tablet-portrait)</li>
                        <li><strong>$upto</strong>; media query breakpoint (e.g. desktop)</li>
                        <li><strong>$width</strong>; width as a percentage (e.g. 50%) or 24-column value (e.g. 8)</li>
                        <li><strong>$important</strong>; use an <code class="language-scss">!important</code> attribute</li>
                    </ul>
                </div>

                <div sf-subunit>
                    <h3>Push and pull</h3>
                    <p>
                        <strong>Push</strong> a grid cell to the right or <strong>pull</strong> to the left instead of using empty grid cells for positioning:
                    </p>
                </div>

                <div sf-subunit>
                    <pre>
                        <code class="language-scss">
                            [role="gridcell"] {
                                @include sf-push (
                                    $from: tablet-portrait,
                                    $width: 16%
                                );

                                @include sf-pull (
                                    $from: tablet-portrait,
                                    $width: 4
                                );
                            }
                        </code>
                    </pre>
                </div>

                <div sf-subunit>
                    <ul>
                        <li><strong>$from</strong>; media query breakpoint (e.g. tablet-portrait)</li>
                        <li><strong>$upto</strong>; media query breakpoint (e.g. desktop)</li>
                        <li><strong>$width</strong>; width as a percentage (e.g. 50%) or 24-column value (e.g. 8)</li>
                    </ul>
                    <nav role="link">
                        <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                    </nav>
                </div>
            </section>

            <!-- Samples -->
            <section separator></section>     

            <!-- Gutterless grid -->
            <section id="toc-example-gutterless-grid" title="Example basic grid" sf-unit>
                <div sf-subunit>
                    <h1>
                        <span class="fa-stack fa-2x">
                            <i class="fa fa-circle fa-stack-2x"></i>
                            <i class="fa fa-info fa-stack-1x fa-inverse"></i>
                        </span>Examples
                    </h1>
                    <p>
                        The following are some examples of how to implement various grid configurations.
                    </p>
                    <h2>Basic grid</h2>
                    <p>This is a grid without gutters and which has grid cell widths set.</p>
                </div>
                <div sf-subunit>
                    <div id="gutterless-grid-unit" sf-subunit>
                        <section id="gutterless-grid" role="grid" sf-tabp-cols="3">
                            <div role="gridcell">
                                <section>
                                    <div><h3>Box 1</h3></div>
                                </section>
                            </div>
                            <div role="gridcell">
                                <section>
                                    <div><h3>Box 2</h3></div>
                                </section>
                            </div>
                            <div role="gridcell" sf-tabp-col-4>
                                <section>
                                    <div><h3>Box 3</h3></div>
                                </section>
                            </div>
                            <div role="gridcell" sf-tabp-col-4>
                                <section>
                                    <div><h3>Box 4</h3></div>
                                </section>
                            </div>
                            <div role="gridcell" sf-tabp-col-4>
                                <section>
                                    <div><h3>Box 5</h3></div>
                                </section>
                            </div>
                            <div role="gridcell">
                                <section>
                                    <div><h3>Box 6</h3></div>
                                </section>
                            </div>
                        </section>
                    </div>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="gutterless-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#gutterless-grid-unit-sample").text($("#gutterless-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>

            <!-- Gutterless grid with push -->
            <section id="toc-example-gutterless-grid-push" title="Example grid with push" sf-unit>
                <div sf-subunit>
                    <h2>Grid with push</h2>
                    <p>
                        This grid pushed its columns over to center them on tablet-portrait and above.
                        Pull is also available. 
                    </p>
                </div>
                <div id="push-grid-unit" sf-subunit>
                    <div id="push-grid" role="grid" sf-tabp-cols="3">
                        <div role="gridcell" sf-tabp-push-4>
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell" sf-tabp-push-4>
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                    </div>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="push-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#push-grid-unit-sample").text($("#push-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>

            <!-- Gutterless grid in reverse -->
            <section id="toc-example-gutterless-reverse" title="Example reverse grid" sf-unit>
                <div sf-subunit>
                    <h2>Reverse grid</h2>
                    <p>
                        Useful for layouts where cells need to be in reverse order for one or more breakpoints. 
                        This example uses reverse order grid cells for tablet-portrait and wider displays.
                    </p>
                </div>
                <div id="gutterless-reverse-grid-unit" sf-subunit>
                    <section id="gutterless-reverse-grid" role="grid" sf-tabp-cols="3" sf-tabp-reverse>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 3</h3></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="gutterless-reverse-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#gutterless-reverse-grid-unit-sample").text($("#gutterless-reverse-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>

            <!-- Gutters grid -->
            <section id="toc-example-gutters-grid" title="Example grid with gutters" sf-unit>
                <div sf-subunit>
                    <h2>Grid with gutters</h2>
                    <p>
                        This grid has gutters and uses the default grid cell widths based on the number of columns set.
                    </p>
                </div>
                <div id="gutters-grid-unit" sf-subunit>
                    <section id="gutters-grid" role="grid" sf-row-gutters="1.25rem" sf-tabp-cols="3" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem">
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 3</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 4</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 5</h3></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="gutters-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#gutters-grid-unit-sample").text($("#gutters-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>

            <!-- Gutters grid with push -->
            <section id="toc-example-gutters-push-grid" title="Example grid with gutters and push" sf-unit>
                <div sf-subunit>
                    <h2>Grid with gutters and push</h2>
                    <p>
                        This grid pushed its columns over to center them on tablet-portrait and above.
                        Pull is also available. 
                    </p>
                </div>
                <div id="gutters-push-grid-unit" sf-subunit>
                    <section id="gutters-push-grid" role="grid" sf-row-gutters="1.25rem" sf-tabp-cols="3" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem">
                        <div role="gridcell" sf-tabp-push-4>
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell" sf-tabp-push-4>
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="gutters-push-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#gutters-push-grid-unit-sample").text($("#gutters-push-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>
            
            <!-- Gutters grid in reverse -->
            <section id="toc-example-gutters-reverse-grid" title="Example reverse grid with gutters" sf-unit>
                <div sf-subunit>
                    <h2>Reverse grid with gutters</h2>
                    <p>
                        Useful for layouts where cells need to be in reverse order for one or more breakpoints. 
                        This example uses reverse order grid cells for tablet-portrait and wider displays.
                    </p>
                </div>
                <div id="gutters-reverse-grid-unit" sf-subunit>
                    <section id="gutters-reverse-grid" role="grid" sf-row-gutters="1.25rem" sf-tabp-cols="3" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem" sf-tabp-reverse>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 3</h3></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="gutters-reverse-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#gutters-reverse-grid-unit-sample").text($("#gutters-reverse-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>

            <!-- Gutters grid, varied widths -->
            <section id="toc-example-gutters-varied-grid" title="Example varied width cells" sf-unit>
                <div sf-subunit>
                    <h2>Varied width grid cells</h2>
                    <p>
                        Useful for layouts where grid cells use varied widths, like for sidebar navigation.
                    </p>
                </div>
                <div id="gutters-varied-grid-unit" sf-subunit>
                    <section id="gutters-varied-grid" sf-row-gutters="1.25rem" role="grid" sf-tabp-cols="3" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem">
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 3</h3></div>
                            </section>
                        </div>
                        <div role="gridcell" sf-tabp-col-12>
                            <section>
                                <div><h3>Box 4</h3></div>
                            </section>
                        </div>
                        <div role="gridcell" sf-tabp-col-6>
                            <section>
                                <div><h3>Box 5</h3></div>
                            </section>
                        </div>
                        <div role="gridcell" sf-tabp-col-6>
                            <section>
                                <div><h3>Box 6</h3></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="gutters-varied-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#gutters-varied-grid-unit-sample").text($("#gutters-varied-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>

            <!-- Gutters grid, equal heights -->
            <section id="toc-example-gutters-equal-heights-grid" title="Example equal height cells" sf-unit>
                <div sf-subunit>
                    <h2>Equal height grid cells</h2>
                    <p>
                        Useful for things like pricing panels. Equal heights are not necessary in a single column mobile layout.
                    </p>
                </div>
                <div id="gutters-equal-heights-grid-unit" sf-subunit>
                    <section id="gutters-equal-heights-grid" role="grid" sf-row-gutters="1.25rem" sf-tabp-cols="3" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem" sf-tabp-equal-heights>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 3</h3><p>Sample box #3</p></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="gutters-equal-heights-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#gutters-equal-heights-grid-unit-sample").text($("#gutters-equal-heights-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>
    
            <!-- Gutters grid, equal heights, vertically centered -->
            <section id="toc-example-gutters-equal-heights-centered-grid" title="Example vertically centered cells" sf-unit>
                <div sf-subunit>
                    <h2>Vertically centered grid cells</h2>
                    <p>
                        Useful for things like a series of logos. Equal heights are not necessary in a single column mobile layout.
                    </p>
                </div>
                <div id="equal-heights-centered-grid-unit" sf-subunit>
                    <section id="equal-heights-centered-grid" role="grid" sf-row-gutters="1.25rem" sf-tabp-cols="3" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem" sf-tabp-equal-heights sf-tabp-centered>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 1</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 3</h3><p>Sample box #3</p></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="equal-heights-centered-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#equal-heights-centered-grid-unit-sample").text($("#equal-heights-centered-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>
        
            <!-- Gutters grid, nested grid -->
            <section id="toc-example-gutters-nested-grid" title="Example nested grid" sf-unit>
                <div sf-subunit>
                    <h2>Nested grid</h2>
                    <p>
                        Nesting grids is useful for more complex layouts with varying gutter sizes.
                    </p>
                </div>
                <div id="nested-grid-unit" sf-subunit>
                    <section id="nested-grid" role="grid" sf-row-gutters="1.25rem" sf-tabp-cols="3" sf-tabp-gutters="3%" sf-tabp-row-gutters="2rem">
                        <div role="gridcell">
                            <section id="the-nested-grid" role="grid" sf-tabp-cols="2" sf-tabp-gutters="5%" sf-tabp-row-gutters="1.25rem">
                                <div role="gridcell">
                                    <section>
                                        <div><h3>Box 1</h3></div>
                                    </section>
                                </div>
                                <div role="gridcell">
                                    <section>
                                        <div><h3>Box 2</h3></div>
                                    </section>
                                </div>
                                <div role="gridcell">
                                        <section>
                                            <div><h3>Box 3</h3></div>
                                        </section>
                                    </div>
                                    <div role="gridcell">
                                        <section>
                                            <div><h3>Box 4</h3></div>
                                        </section>
                                    </div>
                                </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 2</h3></div>
                            </section>
                        </div>
                        <div role="gridcell">
                            <section>
                                <div><h3>Box 3</h3></div>
                            </section>
                        </div>
                    </section>
                </div>
                <div role="grid" sf-row-gutters="2rem" sf-tabp-cols="2" sf-tabp-gutters="5%">
                    <div role="gridcell">
                        <h4>HTML</h4>
                        <pre>
                            <code class="language-html" id="nested-grid-unit-sample"></code>
                        </pre>
                    </div>
                    <div role="gridcell">
                        <h4>SCSS</h4>
                        <p>This is an automatic grid. <strong>No SCSS needed.</strong></p>
                    </div>
                </div>
                <nav role="link">
                    <a href="#top"><i class="fa fa-arrow-up" aria-hidden="true"></i> Back to top</a>
                </nav>
                <script type="text/javascript">
                    $("#nested-grid-unit-sample").text($("#nested-grid-unit").html().replace(/=""/g, ""));
                </script>
            </section>
        </main>
<!--#include virtual="/_footer.shtml"-->
    </body>
</html>
