/**
 * @nuclide Hide
 * @section Mixins > Styles
 * @modifiers
 *  sf-hide() - Hide and element from everything based on media breakpoints using `display: none`.
 * @markup
 *  @include sf-hide($from: tabp);
 *  @include sf-hide($upto: tabp);
 */
@mixin sf-hide (
    $from:false, 
    $upto:false) {

    $frombreakpoint: $from;
    $uptobreakpoint: $upto;

    @include sf-media($from: $frombreakpoint, $upto: $uptobreakpoint) {

        display: none;
    }
}

/**
 * @nuclide Visually Hide
 * @section Mixins > Styles
 * @modifiers
 *  sf-visually-hide() - Visually hide an element without using `display: none`.
 * @markup
 *  @include sf-visually-hide($from: tabp);
 *  @include sf-visually-hide($upto: tabp);
 */
@mixin sf-visually-hide (
    $from:false, 
    $upto:false) {

    $frombreakpoint: $from;
    $uptobreakpoint: $upto;

    @include sf-media($from: $frombreakpoint, $upto: $uptobreakpoint) {

        border: 0;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }
}

/**
 * Generate attribute styles:
 * [sf-hide], [sf-zero-hide], [sf-hide-tabp-and-up], [sf-hide-below-tabp], etc.
 */
@each $breakpoint, $value in $media-breakpoints {

    @if ($value != false) {

        @if ($breakpoint == zero) {

            [sf-hide], [sf-zero-hide] {

                display: none !important;
            }

        } @else {

            @include sf-media($from: $breakpoint) {

                [sf-hide-#{$breakpoint}-and-up] {

                    display: none !important;
                }
            }

            @include sf-media($upto: $breakpoint) {

                [sf-hide-below-#{$breakpoint}] {

                    display: none !important;
                }
            }
        }
    }
}

