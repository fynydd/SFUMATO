/**
 * Get Media Features - Get a media feature set by name, for use in media queries
 */
@function sf-get-feature($name, $features: $media-features) {

    @if map-has-key($features, $name) {

        @return map-get($features, $name);

    } @else {

        @return false;
    }
}

/**
 * @nuclide Get Breakpoint Width
 * @section Functions > Media
 * @modifiers
 *  sf-get-breakpoint-width($name, $breakpoints) - Get the named media breakpoint width from a map.
 * @markup
 *  width: sf-get-breakpoint-width(tabp);
 */
@function sf-get-breakpoint-width($name, $breakpoints: $media-breakpoints) {

    @if map-has-key($breakpoints, $name) {

        @return map-get($breakpoints, $name);

    } @else {

        @warn "Breakpoint #{$name} wasn't found in $media-breakpoints.";
        @return false;
    }
}

/**
 * @nuclide Media Query
 * @section Functions > Media
 * @modifiers
 *  sf-media($feature, $from, $upto, $type) - Styles should only be applied to a specific media breakpoint.
 * @markup
 *  @include sf-media($feature:portrait, $from:tabp) {
 *    ...
 *  }
 */
@mixin sf-media(
    $feature:false, 
    $from:false, 
    $upto:false, 
    $type:screen
) {

    $min-width: 0;
    $max-width: 0;
    $media-query: '';

    // From: this breakpoint (inclusive)
    @if $from {

        @if type-of($from) == number {

            $min-width: sf-number2px($from);

        } @else if sf-get-breakpoint-width($from) {

            $min-width: sf-number2px(sf-get-breakpoint-width($from));
        }
    }

    // Upto: that breakpoint (exclusive)
    @if $upto {

        @if type-of($upto) == number {

            $max-width: sf-number2px($upto);

        } @else if sf-get-breakpoint-width($upto) {

            $max-width: sf-number2px(sf-get-breakpoint-width($upto)) - 1px;
        }
    }

    @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }

    @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }

    @if $feature {

        // Pass through custom expression or get defined expression
        $original-feature: $feature;
        $feature: sf-get-feature($feature);

        @if $feature {

            $media-query: '#{$media-query} and #{$feature}';

        } @else {

            $media-query: '#{$media-query} and (#{$original-feature})';
        }
    }

    // Remove unnecessary media query prefix 'all and '
    @if ($type == 'all' and $media-query != '') {

        $type: '';
        $media-query: str-slice(unquote($media-query), 6);
    }


    // -------------------------------------------
    // GENERATE OUTPUT
    // -------------------------------------------

    $skip: false;

    @if ($from != false and nth(map-get($media-breakpoints, $from), 1) == false)
    {
        $skip: true;
    }

    @if ($upto != false and nth(map-get($media-breakpoints, $upto), 1) == false)
    {
        $skip: true;
    }

    @if ($skip == false) {

        @media #{$type + $media-query} {

            @content;
        }
    }
}
